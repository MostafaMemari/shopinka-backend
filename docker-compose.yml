services:
    ### Backend Api ###
    backend:
      container_name: backend
      build:
        context: "./backend"
        dockerfile: Dockerfile
      env_file:
        - backend/.env
      ports:
        - ${BACKEND_PORT}:${BACKEND_PORT}
      networks:
        - app
      volumes:
        - ./backend/src:/app/src
        
    ### Redis Insight ###
    redisinsight:
      image: redis/redisinsight:latest
      container_name: redisinsight
      ports:
        - 5540:5540
      depends_on:
        - redis
      networks:
        - app
      volumes:
        - redisinsight_data:/data

    ### Redis ###
    redis: 
      container_name: redis
      image: redis
      ports:
        - "${REDIS_PORT}:${REDIS_PORT}"
      networks:
        - app  
      volumes:
        - redis_data:/data

    ### Backend DB ###
    backend_db:
      container_name: backend_db
      image: postgres:14.15-alpine3.21
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      networks:
        - app
      volumes:
        - backend_db:/var/lib/postgresql/data

    ### PG ADMIN ###
    pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      environment:
        - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
        - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      ports:
        - 4020:80
      depends_on:
        - backend_db
      networks:
        - app
      volumes:
        - pgadmin_data:/var/lib/pgadmin

volumes:
  pgadmin_data:
  redisinsight_data:
  redis_data:
  backend_db:

networks:
  app:
    driver: bridge
